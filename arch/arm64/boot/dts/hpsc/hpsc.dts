/dts-v1/;

#include <dt-bindings/phy/phy.h>
#include "mailbox-map.h" /* same file also present in other subsystems */

#define MASTER_ID_TRCH_CPU  0x2d

#define MASTER_ID_RTPS_CPU0 0x2e
#define MASTER_ID_RTPS_CPU1 0x2f

#define MASTER_ID_HPPS_CPU0 0x80
#define MASTER_ID_HPPS_CPU1 0x8d
#define MASTER_ID_HPPS_CPU2 0x8e
#define MASTER_ID_HPPS_CPU3 0x8f
#define MASTER_ID_HPPS_CPU4 0x90
#define MASTER_ID_HPPS_CPU5 0x9d
#define MASTER_ID_HPPS_CPU6 0x9e
#define MASTER_ID_HPPS_CPU7 0x9f

#define MASTER_ID_SMC       0x872
#define MASTER_ID_XGMAC     0x874
#define MASTER_ID_HPPS_DMA  0x877
#define MASTER_ID_SRIO0_DMA 0x878
#define MASTER_ID_SRIO1_DMA 0x879

/ {
	model = "HPSC";
	compatible = "xlnx,zynqmp";
	#address-cells = <2>;
	#size-cells = <2>;

	aliases {
		ethernet0 = &xgmac;
		serial0 = &uart0;
		/* Note: watchdog0 is claimed by softdog since it is loaded first */
		/* SW can parse /sys/class/watchdog/watchdog[N]/ to distinguish between WDTs */
		watchdog1 = &hpps_wdt0;
		watchdog2 = &hpps_wdt1;
		watchdog3 = &hpps_wdt2;
		watchdog4 = &hpps_wdt3;
		watchdog5 = &hpps_wdt4;
		watchdog6 = &hpps_wdt5;
		watchdog7 = &hpps_wdt6;
		watchdog8 = &hpps_wdt7;
	};

	chosen {
		bootargs = "earlycon";
		stdout-path = "serial0:115200n8";
	};

        /* NOTE: memory { } nodes appended by u-boot from its device tree */

        reserved-memory { /* TOOD: confirm that this is respected, also can/should this be in u-boot DT? */
                /* for RTPS<->HPPS MMU page table and space for MMU test data */
                reg = <0x0 0x8e000000 0x0 0x2000>;
        };

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpul0>;
				};
				core1 {
					cpu = <&cpul1>;
				};
				core2 {
					cpu = <&cpul2>;
				};
				core3 {
					cpu = <&cpul3>;
				};
			};
			cluster1 {
				core0 {
					cpu = <&cpub0>;
				};
				core1 {
					cpu = <&cpub1>;
				};
				core2 {
					cpu = <&cpub2>;
				};
				core3 {
					cpu = <&cpub3>;
				};
			};

		};
         
		cpul0: cpu@0 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x0>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		cpul1: cpu@1 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x1>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		cpul2: cpu@2 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x2>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		cpul3: cpu@3 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x3>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		cpub0: cpu@100 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x100>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		cpub1: cpu@101 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x101>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		cpub2: cpu@102 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x102>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		cpub3: cpu@103 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x103>;
			cpu-idle-states = <&CPU_SLEEP_0>;
		};

		idle-states {
			entry-mehod = "arm,psci";

			CPU_SLEEP_0: cpu-sleep-0 {
				compatible = "arm,idle-state";
				arm,psci-suspend-param = <0x40000000>;
				local-timer-stop;
				entry-latency-us = <300>;
				exit-latency-us = <600>;
				min-residency-us = <800000>;
			};
		};
	};

	dcc: dcc {
		compatible = "arm,dcc";
		status = "okay";
	};

	power-domains {
		compatible = "xlnx,zynqmp-genpd";

		pd_uart0: pd-uart0 {
			#power-domain-cells = <0x0>;
			pd-id = <0x21>;
		};

		pd_xgmac: pd-xgmac {
			#power-domain-cells = <0x0>;
			pd-id = <0x1d>;
		};

		pd_nand: pd-nand {
			#power-domain-cells = <0x0>;
			pd-id = <0x2c>;
		};

		pd_pcie: pd-pcie {
			#power-domain-cells = <0x0>;
			pd-id = <0x3b>;
		};
	};

	pmu {
		compatible = "arm,armv8-pmuv3";
		interrupt-parent = <&gic>;
		interrupts = <0 143 4>,
			     <0 144 4>,
			     <0 145 4>,
			     <0 146 4>,
			     <0 147 4>,
			     <0 148 4>,
			     <0 149 4>,
			     <0 150 4>;
		interrupt-affinity = <&cpul0>, <&cpul1>, <&cpul2>,
				     <&cpul3>, <&cpub0>, <&cpub1>,
				     <&cpub2>, <&cpub3>;
	};

	psci {
		compatible = "arm,psci-0.2";
		method = "smc";
	};

	firmware {
		compatible = "xlnx,zynqmp-pm";
		method = "smc";
		interrupt-parent = <&gic>;
		interrupts = <0 35 4>;
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupt-parent = <&gic>;
		interrupts = <1 13 0xf01>,
			     <1 14 0xf01>,
			     <1 11 0xf01>,
			     <1 10 0xf01>;
	};

	edac {
		compatible = "arm,cortex-a53-edac";
	};

	pcap {
		compatible = "xlnx,zynqmp-pcap-fpga";
	};

	amba_apu: amba_apu {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <1>;
		ranges = <0 0 0 0 0xffffffff>;

		gic: interrupt-controller@f9000000 {
			compatible = "arm,gic-v3"; 
			#interrupt-cells = <3>;
			#redistributor-regions = <1>;
			reg = <0x0 0xf9000000 0x20000>,
			      <0x0 0xf9100000 0x100000>;
			interrupt-controller;
			interrupts = <1 9 0xf04>;
		};
	};

	amba: amba {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		xgmac: ethernet@0xe5300000 {
			compatible = "cdns,zynqmp-gem";
			status = "okay";
			interrupt-parent = <&gic>;
			interrupts = <0 57 4>, <0 58 4>;
			reg = <0x0 0xe5300000 0x0 0x1000>;
			clocks = <&clk125>, <&clk125>, <&clk125>;
			clock-names = "pclk", "hclk", "tx_clk";
			#address-cells = <1>;
			#size-cells = <0>;
			iommus = <&smmu MASTER_ID_XGMAC>;
			power-domains = <&pd_xgmac>;
			local-mac-address = [00 0a 35 00 02 90];
			phy-handle = <&phy0>;
			phy-mode = "rgmii-id";

			phy0: phy@7 {
				reg = <7>;
				ti,rx-internal-delay = <0x8>;
				ti,tx-internal-delay = <0xa>;
				ti,fifo-depth = <0x1>;
				ti,rxctrl-strap-worka;
			};
		};

#if 0 /* TODO */
		pcie: pcie@0xe5330000 {
			compatible = "xlnx,nwl-pcie-2.11";
			status = "okay";
			#address-cells = <3>;
			#size-cells = <2>;
			#interrupt-cells = <1>;
			msi-controller;
			device_type = "pci";
			interrupt-parent = <&gic>;
			interrupts = <0 118 4>,
				     <0 117 4>,
				     <0 116 4>,
				     <0 115 4>,	/* MSI_1 [63...32] */
				     <0 114 4>;	/* MSI_0 [31...0] */
			interrupt-names = "misc","dummy","intx", "msi1", "msi0";
			msi-parent = <&pcie>;
			reg = <0x0 0xe5330000 0x0 0x1000>,
			      <0x0 0xe53d0000 0x0 0x1000>,
			      <0x80 0x00000000 0x0 0x1000000>;
			reg-names = "breg", "pcireg", "cfg";
			ranges = <0x02000000 0x00000000 0xe0000000 0x00000000 0xe0000000 0x00000000 0x10000000	/* non-prefetchable memory */
				  0x43000000 0x00000006 0x00000000 0x00000006 0x00000000 0x00000002 0x00000000>;/* prefetchable memory */
			interrupt-map-mask = <0x0 0x0 0x0 0x7>;
			interrupt-map = <0x0 0x0 0x0 0x1 &pcie_intc 0x1>,
					<0x0 0x0 0x0 0x2 &pcie_intc 0x2>,
					<0x0 0x0 0x0 0x3 &pcie_intc 0x3>,
					<0x0 0x0 0x0 0x4 &pcie_intc 0x4>;
			power-domains = <&pd_pcie>;
			pcie_intc: legacy-interrupt-controller {
				interrupt-controller;
				#address-cells = <0>;
				#interrupt-cells = <1>;
			};
		};
#endif

		smmu: smmu@f9300000 {
			compatible = "arm,mmu-500";
			reg = <0x0 0xf9300000 0x0 0x20000>;
			#iommu-cells = <1>;
			#global-interrupts = <1>;
			interrupt-parent = <&gic>;
			interrupts = <0 152 4>, /* global irq */
                                /* context IRQs */
                                <0 153 4>, <0 154 4>, <0 155 4>, <0 156 4>,
                                <0 157 4>, <0 158 4>, <0 159 4>, <0 160 4>,
                                <0 161 4>, <0 162 4>, <0 163 4>, <0 164 4>,
                                <0 165 4>, <0 166 4>, <0 167 4>, <0 168 4>;
		};

		uart0: serial@f92c0000 {
			compatible = "cdns,uart-r1p12", "xlnx,xuartps";
			status = "okay";
			interrupt-parent = <&gic>;
			interrupts = <0 23 4>;
			reg = <0x0 0xf92c0000 0x0 0x1000>;
			clocks = <&clk100 &clk100>;
			clock-names = "uart_clk", "pclk";
			power-domains = <&pd_uart0>;
		};

		trch_mbox: mailbox@0xfff50000 {
			compatible = "hpsc,hpsc-mbox";
                        reg = <0x0 0xfff50000 0x0 0x1000>;
			interrupt-parent = <&gic>;

			/* Define all, but only two will be used, selected by
			 * interrupt-idx-{rcv,ack} props. We can't only list
			 * the two in this list, because the driver needs the
			 * actual within-ip-block index of the interrupt (and
			 * if we do, we'd still need an extra property to define
			 * the starting irq number, which is worse. */
                        interrupts = <0 136 4>, <0 137 4>, <0 138 4>, <0 139 4>,
                                     <0 140 4>, <0 141 4>, <0 142 4>, <0 143 4>,
                                     <0 144 4>, <0 145 4>, <0 146 4>, <0 147 4>,
                                     <0 148 4>, <0 149 4>, <0 150 4>, <0 151 4>;

			/* Map all instances onto one pair of IRQs,
			 * this pair must be not be used by other subsystems */
			interrupt-idx-rcv = <MBOX_HPPS_TRCH__HPPS_RCV_INT>;
			interrupt-idx-ack = <MBOX_HPPS_TRCH__HPPS_ACK_INT>;

			#mbox-cells = <4>;
                        /* instance index,
                           owner (0=do not claim, else set owner reg to this value),
                           source,
                           destination (if dest is not 0,
                                          if not owner, then dest reg checked against this value,
                                          if owner and, dest reg is set to this value) */
		};

		rtps_mbox: mailbox@0xfff60000 {
			compatible = "hpsc,hpsc-mbox";
                        reg = <0x0 0xfff60000 0x0 0x1000>;
			interrupt-parent = <&gic>;

                        interrupts = <0 203 4>, <0 204 4>, <0 205 4>, <0 206 4>,
                                     <0 207 4>, <0 208 4>, <0 209 4>, <0 210 4>,
                                     <0 211 4>, <0 212 4>, <0 213 4>, <0 214 4>,
                                     <0 215 4>, <0 216 4>, <0 217 4>, <0 218 4>;

			interrupt-idx-rcv = <MBOX_HPPS_RTPS__HPPS_RCV_INT>;
			interrupt-idx-ack = <MBOX_HPPS_RTPS__HPPS_ACK_INT>;

			#mbox-cells = <4>;
		};

		mailbox_client_trch {
			compatible = "hpsc-mbox-userspace";
			mboxes =  /* ip block, instance index, owner, src, dest */
				    <&trch_mbox   0     0                    0 0>,
				    <&trch_mbox   1     0                    0 0>,
				    <&trch_mbox   2     0                    0 0>,
				    <&trch_mbox   3     0                    0 0>,
				    <&trch_mbox   4     0                    0 0>,
				    <&trch_mbox   5     0                    0 0>,
				    <&trch_mbox   6     0                    0 0>,
				    <&trch_mbox   7     0                    0 0>,
				    <&trch_mbox   8     0                    0 0>,
				    <&trch_mbox   9     0                    0 0>,
				    <&trch_mbox  10     0                    0 0>,
				    <&trch_mbox  11     0                    0 0>,
				    <&trch_mbox  12     0                    0 0>,
				    <&trch_mbox  13     0                    0 0>,
				    <&trch_mbox  14     0                    0 0>,
				    <&trch_mbox  15     0                    0 0>,
				    <&trch_mbox  16     0                    0 0>,
				    <&trch_mbox  17     0                    0 0>,
				    <&trch_mbox  18     0                    0 0>,
				    <&trch_mbox  19     0                    0 0>,
				    <&trch_mbox  20     0                    0 0>,
				    <&trch_mbox  21     0                    0 0>,
				    <&trch_mbox  22     0                    0 0>,
				    <&trch_mbox  23     0                    0 0>,
				    <&trch_mbox  24     0                    0 0>,
				    <&trch_mbox  25     0                    0 0>,
				    <&trch_mbox  26     0                    0 0>,
				    <&trch_mbox  27     0                    0 0>,
				    <&trch_mbox  28     0                    0 0>,
				    <&trch_mbox  29     0                    0 0>;
				    /* Reserved for in-kernel SSW (see below)
				     * <&trch_mbox  30     0                    0 0>,
				     * <&trch_mbox  31     0                    0 0>;
				     */
			/* NOTE: destination is just an identifier, mboxes accessible from any core */
			/* names optional, if not given, dev files named 'mbox%u' by index */
			/*
			mbox-names = "mbox_trch_out",
				     "mbox_trch_in",
				     "mbox_rtps_out",
				     "mbox_rtps_in",
				     "mbox_own_trch_out",
				     "mbox_own_trch_in";
			*/
		};

		mailbox_client_rpts {
			compatible = "hpsc-mbox-userspace";
			mboxes =  /* ip block, instance index, owner, src, dest */
				    <&rtps_mbox   0     0                    0 0>,
				    <&rtps_mbox   1     0                    0 0>,
				    <&rtps_mbox   2     0                    0 0>,
				    <&rtps_mbox   3     0                    0 0>,
				    <&rtps_mbox   4     0                    0 0>,
				    <&rtps_mbox   5     0                    0 0>,
				    <&rtps_mbox   6     0                    0 0>,
				    <&rtps_mbox   7     0                    0 0>,
				    <&rtps_mbox   8     0                    0 0>,
				    <&rtps_mbox   9     0                    0 0>,
				    <&rtps_mbox  10     0                    0 0>,
				    <&rtps_mbox  11     0                    0 0>,
				    <&rtps_mbox  12     0                    0 0>,
				    <&rtps_mbox  13     0                    0 0>,
				    <&rtps_mbox  14     0                    0 0>,
				    <&rtps_mbox  15     0                    0 0>,
				    <&rtps_mbox  16     0                    0 0>,
				    <&rtps_mbox  17     0                    0 0>,
				    <&rtps_mbox  18     0                    0 0>,
				    <&rtps_mbox  19     0                    0 0>,
				    <&rtps_mbox  20     0                    0 0>,
				    <&rtps_mbox  21     0                    0 0>,
				    <&rtps_mbox  22     0                    0 0>,
				    <&rtps_mbox  23     0                    0 0>,
				    <&rtps_mbox  24     0                    0 0>,
				    <&rtps_mbox  25     0                    0 0>,
				    <&rtps_mbox  26     0                    0 0>,
				    <&rtps_mbox  27     0                    0 0>,
				    <&rtps_mbox  28     0                    0 0>,
				    <&rtps_mbox  29     0                    0 0>,
				    <&rtps_mbox  30     0                    0 0>,
				    <&rtps_mbox  31     0                    0 0>;
		};

		mailbox_kernel {
			compatible = "hpsc-mbox-kernel";
			mboxes =  /* ip block, instance index, owner, src, dest */
				    <&trch_mbox  30     0  MASTER_ID_HPPS_CPU0 MASTER_ID_TRCH_CPU>,
				    <&trch_mbox  31     0  MASTER_ID_TRCH_CPU  MASTER_ID_HPPS_CPU0>;
		};

		hpps_wdt0: wdt@F9240000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF9240000 0x0 0x10000>;
		};

		hpps_wdt1: wdt@F9250000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF9250000 0x0 0x10000>;
		};

		hpps_wdt2: wdt@F9260000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF9260000 0x0 0x10000>;
		};

		hpps_wdt3: wdt@F9270000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF9270000 0x0 0x10000>;
		};

		hpps_wdt4: wdt@F9280000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF9280000 0x0 0x10000>;
		};

		hpps_wdt5: wdt@F9290000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF9290000 0x0 0x10000>;
		};

		hpps_wdt6: wdt@F92A0000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF92A0000 0x0 0x10000>;
		};

		hpps_wdt7: wdt@F92B0000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xF92B0000 0x0 0x10000>;
		};

		hpps_dma: dma-controller@0xf92e0000 {
			#dma-cells = <1>;
			compatible = "arm,pl330", "arm,primecell"; /* primecell spec required */
			reg = <0x0 0xf92e0000 0x0 0x1000>;
			interrupt-parent = <&gic>;
			interrupts = <0 63 4>, <0 64 4>;
			iommus = <&smmu MASTER_ID_HPPS_DMA>;
			clocks = <&dma_clk>;
			clock-names = "apb_pclk"; /* required, because amba code looks for it by name */
		};

		srio0_dma: dma-controller@0xe5310000 {
			#dma-cells = <1>;
			compatible = "arm,pl330", "arm,primecell"; /* primecell spec required */
			reg = <0x0 0xe5310000 0x0 0x1000>;
			interrupt-parent = <&gic>;
			interrupts = <0 65 4>, <0 66 4>;
			iommus = <&smmu MASTER_ID_SRIO0_DMA>;
			clocks = <&dma_clk>;
			clock-names = "apb_pclk"; /* required, because amba code looks for it by name */
		};

		srio1_dma: dma-controller@0xe5330000 {
			#dma-cells = <1>;
			compatible = "arm,pl330", "arm,primecell"; /* primecell spec required */
			reg = <0x0 0xe5330000 0x0 0x1000>;
			interrupt-parent = <&gic>;
			interrupts = <0 67 4>, <0 68 4>;
			iommus = <&smmu MASTER_ID_SRIO1_DMA>;
			clocks = <&dma_clk>;
			clock-names = "apb_pclk"; /* required, because amba code looks for it by name */
		};
		smcc: smcc-memory-controller@f92d0000 {
			#address-cells = <2>;
			#size-cells = <2>; 
			status = "okay";
			clocks = <&clk100>, <&clk125>;
			clock-names = "aclk", "memclk";
			/* iommus = <&smmu MASTER_ID_SMC>; */ /* not connected to an MMU TBU */
			compatible = "arm,pl353-smc-r2p1";
			interrupt-parent = <&gic>;
			interrupts = <0 14 4>;
			ranges ;
			reg = <0x0 0xf92d0000 0x0 0x1000>;
			nand0: nand0@600000000 {
				status = "okay";
				compatible = "arm,pl353-nand-r2p1";
				reg = <0x6 0x0 0x0 0x20000000>;
				#address-cells = <0x2>; 
				#size-cells = <0x1>; 
				power-domains = <&pd_nand>;
			};
			nor0: flash@e2000000 {
				status = "disabled";
				compatible = "cfi-flash";
				reg = <0x6 0x20000000 0x0 0xE0000000>;
				#address-cells = <0x2>; 
				#size-cells = <0x2>; 
			};
		};
	};

	clk100: clk100 {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};
	clk125: clk125 {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <125000000>;
	};

	dma_clk: dma_clk {
		compatible = "fixed-clock";
		#clock-cells = <0x0>;
		clock-frequency = <533000000>;
	};
};
