/dts-v1/;

/* Copies from Qemu Device Tree repo */
#include "hpsc-irqs.dtsh"
#include "hpsc-busids.dtsh"

#include "mailbox-map.h" /* same file also present in other subsystems */

#define GIC_SPI 0
#define GIC_PPI 1
#define GIC_EDGE_RISE 1
#define GIC_EDGE_FALL 2
#define GIC_EDGE_BOTH 3
#define GIC_LVL_HI 4
#define GIC_LVL_LO 8

/ {
	model = "HPSC";
	#address-cells = <2>;
	#size-cells = <2>;

	interrupt-parent = <&gic>;

	aliases {
#if CONFIG_ETH
		ethernet0 = &eth;
#endif /* CONFIG_ETH */
	};

        /* NOTE: memory { } nodes appended by u-boot from its device tree */

	reserved-memory { /* TOOD: confirm that this is respected, also can/should this be in u-boot DT? */
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

#if CONFIG_RAMOOPS
		ramoops@0x87200000 {
			compatible = "ramoops";
			reg = <0x0 0x87200000 0x0 0x0400000>;
			ftrace-size = <0x400000>;
		};
#endif /* CONFIG_RAMOOPS */

#if CONFIG_SHMEM
		/* These shared memory regions cover the following range: */
		/* reg = <0x0 0xbf800000 0x0 0x400000>; */
		/* First part of the memory is for userspace */
		/* outbound to TRCH */
		shm_region0: shm@0x87600000 {
			reg = <0x0 0x87600000 0x0 0x10000>;
		};
		/* inbound from TRCH */
		shm_region1: shm@0x87610000 {
			reg = <0x0 0x87610000 0x0 0x10000>;
		};
		/* currently unused */
		shm_region2: shm@0x87620000 {
			reg = <0x0 0x87620000 0x0 0x3d0000>;
		};
		/* Remaining part of the memory is for the kernel */
		kshm_region_trch_in: kshm@0x879f0000 {
			reg = <0x0 0x879f0000 0x0 0x08000>;
		};
		kshm_region_trch_out: kshm@0x879f8000 {
			reg = <0x0 0x879f8000 0x0 0x08000>;
		};
#endif /* CONFIG_SHMEM */
	};

#if CONFIG_SHMEM
	shm0 {
		compatible = "hpsc-shmem";
		region-name = "region0";
		memory-region = <&shm_region0>;
	};
	shm1 {
		compatible = "hpsc-shmem";
		region-name = "region1";
		memory-region = <&shm_region1>;
	};
	shm2 {
		compatible = "hpsc-shmem";
		region-name = "region2";
		memory-region = <&shm_region2>;
	};
	kshm_trch {
		compatible = "hpsc-kshmem";
		poll-interval-ms = <100>;
		memory-region-in = <&kshm_region_trch_in>;
		memory-region-out = <&kshm_region_trch_out>;
	};
#endif /* CONFIG_SHMEM */

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpul0>;
				};
				core1 {
					cpu = <&cpul1>;
				};
				core2 {
					cpu = <&cpul2>;
				};
				core3 {
					cpu = <&cpul3>;
				};
			};
			cluster1 {
				core0 {
					cpu = <&cpub0>;
				};
				core1 {
					cpu = <&cpub1>;
				};
				core2 {
					cpu = <&cpub2>;
				};
				core3 {
					cpu = <&cpub3>;
				};
			};

		};
         
		cpul0: cpu@0 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x0>;
		};

		cpul1: cpu@1 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x1>;
		};

		cpul2: cpu@2 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x2>;
		};

		cpul3: cpu@3 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x3>;
		};

		cpub0: cpu@100 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x100>;
		};

		cpub1: cpu@101 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x101>;
		};

		cpub2: cpu@102 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x102>;
		};

		cpub3: cpu@103 {
			compatible = "arm,cortex-a53", "arm,armv8";
			device_type = "cpu";
			enable-method = "psci";
			reg = <0x103>;
		};

	};

#if CONFIG_PMU
	pmu {
		compatible = "arm,armv8-pmuv3";
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI HPPS_IRQ__PMU_0 GIC_LVL_HI>,
			     <GIC_SPI HPPS_IRQ__PMU_1 GIC_LVL_HI>,
			     <GIC_SPI HPPS_IRQ__PMU_2 GIC_LVL_HI>,
			     <GIC_SPI HPPS_IRQ__PMU_3 GIC_LVL_HI>,
			     <GIC_SPI HPPS_IRQ__PMU_4 GIC_LVL_HI>,
			     <GIC_SPI HPPS_IRQ__PMU_5 GIC_LVL_HI>,
			     <GIC_SPI HPPS_IRQ__PMU_6 GIC_LVL_HI>,
			     <GIC_SPI HPPS_IRQ__PMU_7 GIC_LVL_HI>;
		interrupt-affinity = <&cpul0>, <&cpul1>, <&cpul2>, <&cpul3>,
                                     <&cpub0>, <&cpub1>, <&cpub2>, <&cpub3>;
	};
#endif /* CONFIG_PMU */

	psci {
		compatible = "arm,psci-0.2";
		method = "smc";
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupt-parent = <&gic>;
		interrupts = <GIC_PPI PPI_IRQ__TIMER_SEC  GIC_LVL_LO>,
			     <GIC_PPI PPI_IRQ__TIMER_PHYS GIC_LVL_LO>,
			     <GIC_PPI PPI_IRQ__TIMER_VIRT GIC_LVL_LO>,
			     <GIC_PPI PPI_IRQ__TIMER_HYP  GIC_LVL_LO>;
	};

	amba: amba {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		gic: interrupt-controller@f9000000 {
			compatible = "arm,gic-v3"; 
			reg = <0x0 0xf9000000 0x0 0x20000>,
			      <0x0 0xf9100000 0x0 0x100000>;
			interrupt-controller;
			interrupts = <GIC_PPI PPI_IRQ__GIC_MAINT GIC_LVL_HI>;

			#interrupt-cells = <3>;
			#redistributor-regions = <1>;
		};

#if CONFIG_ETH
#if CONFIG_ETH_CDNS
		eth: ethernet@0xe5300000 {
			compatible = "cdns,gem";
			reg = <0x0 0xe5300000 0x0 0x1000>;

			status = "okay";

			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__XGMAC      GIC_LVL_HI>,
                                     <GIC_SPI HPPS_IRQ__XGMAC_WAKE GIC_LVL_HI>;

			clocks = <&clk125>, <&clk125>, <&clk125>;
			clock-names = "pclk", "hclk", "tx_clk";

#if CONFIG_SMMU
			iommus = <&smmu MASTER_ID_XGMAC>;
#endif

			#address-cells = <1>;
			#size-cells = <0>;
		};
#elif CONFIG_ETH_SNPS
		eth: ethernet2@e5300000 {
			compatible = "snps,dwc-qos-ethernet-4.10";
			reg = <0x0 0xe5300000 0x0 0x4000>;

			status = "okay";

			clock-names = "phy_ref_clk", "apb_pclk";
			clocks = <&clk100>, <&clk100>;

			interrupt-parent = <&gic>;
			interrupts = <0x0 49 0x4>;

			phy-handle = <&phy2>;
			phy-mode = "rgmii";
			/* phy-reset-gpios = <&gpioctlr 43 GPIO_ACTIVE_LOW>; */

			snps,en-tx-lpi-clockgating;
			snps,en-lpi;
			snps,write-requests = <2>;
			snps,read-requests = <16>;
			snps,burst-map = <0x7>;
			snps,txpbl = <8>;
			snps,rxpbl = <2>;

			dma-coherent;

			mdio {
				#address-cells = <0x1>;
				#size-cells = <0x0>;

				phy2: phy@1 {
					compatible = "ethernet-phy-ieee802.3-c22";
					device_type = "ethernet-phy";
					reg = <0x1>;
				};
			};
		};
#endif /* CONFIG_ETH_* */
#endif /* CONFIG_ETH */

#if CONFIG_SMMU
		smmu: smmu@f9300000 {
			compatible = "arm,mmu-500";
			reg = <0x0 0xf9300000 0x0 0x20000>;
			#iommu-cells = <1>;
			#global-interrupts = <1>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__HPPS_SMMU_GLOB GIC_LVL_HI>, /* global irq */
                                /* context IRQs */
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_0 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_1 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_2 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_3 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_4 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_5 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_6 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_7 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_8 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_9 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_10 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_11 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_12 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_13 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_14 GIC_LVL_HI>,
                                <GIC_SPI HPPS_IRQ__HPPS_SMMU_CB_15 GIC_LVL_HI>;
		};
#endif /* CONFIG_SMMU */

		uart0: serial@f92c0000 {
			compatible = "ns16550a";
			/* compatible = "snps,dw-apb-uart"; */ /* TODO: fails with unassigned access */
			status = "okay";
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__HPPS_UART0_0 GIC_LVL_HI>;
			reg = <0x0 0xf92c0000 0x0 0x1000>;
			current-speed = <125000>;
			reg-shift = <2>;
			clocks = <&uart_clk &uart_clk>;
			clock-names = "uart_clk", "pclk";
		};
#if CONFIG_MAILBOXES
		/* TODO: name the two mailboxes with index, without referring
		 * to TRCH or RTPS */
		trch_mbox: mailbox@0xfff50000 {
			compatible = "hpsc,hpsc-mbox";
                        reg = <0x0 0xfff50000 0x0 0x1000>;
			interrupt-parent = <&gic>;

			/* Define all, but only two will be used, selected by
			 * interrupt-idx-{rcv,ack} props. We can't only list
			 * the two in this list, because the driver needs the
			 * actual within-ip-block index of the interrupt (and
			 * if we do, we'd still need an extra property to define
			 * the starting irq number, which is worse. */
			interrupts = <GIC_SPI HPPS_IRQ__HT_MBOX_0  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_1  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_2  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_3  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_4  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_5  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_6  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_7  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_8  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_9  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_10 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_11 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_12 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_13 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_14 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HT_MBOX_15 GIC_LVL_HI>;

			/* Map all instances onto one pair of IRQs,
			 * this pair must be not be used by other subsystems */
			interrupt-idx-rcv = <MBOX_HPPS_TRCH__HPPS_RCV_INT>;
			interrupt-idx-ack = <MBOX_HPPS_TRCH__HPPS_ACK_INT>;

			#mbox-cells = <4>;
                        /* instance index,
                           owner (0=do not claim, else set owner reg to this value),
                           source,
                           destination (if dest is not 0,
                                          if not owner, then dest reg checked against this value,
                                          if owner and, dest reg is set to this value) */
		};

		rtps_mbox: mailbox@0xfff60000 {
			compatible = "hpsc,hpsc-mbox";
                        reg = <0x0 0xfff60000 0x0 0x1000>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__HR_MBOX_0  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_1  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_2  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_3  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_4  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_5  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_6  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_7  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_8  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_9  GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_10 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_11 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_12 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_13 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_14 GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HR_MBOX_15 GIC_LVL_HI>;

			interrupt-idx-rcv = <MBOX_HPPS_RTPS__HPPS_RCV_INT>;
			interrupt-idx-ack = <MBOX_HPPS_RTPS__HPPS_ACK_INT>;

			#mbox-cells = <GIC_LVL_HI>;
		};

		mailbox_client_trch {
			compatible = "hpsc-mbox-userspace";
			mboxes =  /* ip block, instance index, owner, src, dest */
				    <&trch_mbox   0     0                    0 0>,
				    <&trch_mbox   1     0                    0 0>,
				    <&trch_mbox   2     0                    0 0>,
				    <&trch_mbox   3     0                    0 0>,
				    <&trch_mbox   4     0                    0 0>,
				    <&trch_mbox   5     0                    0 0>,
				    <&trch_mbox   6     0                    0 0>,
				    <&trch_mbox   7     0                    0 0>,
				    <&trch_mbox   8     0                    0 0>,
				    <&trch_mbox   9     0                    0 0>,
				    <&trch_mbox  10     0                    0 0>,
				    <&trch_mbox  11     0                    0 0>,
				    <&trch_mbox  12     0                    0 0>,
				    <&trch_mbox  13     0                    0 0>,
				    <&trch_mbox  14     0                    0 0>,
				    <&trch_mbox  15     0                    0 0>,
				    <&trch_mbox  16     0                    0 0>,
				    <&trch_mbox  17     0                    0 0>,
				    <&trch_mbox  18     0                    0 0>,
				    <&trch_mbox  19     0                    0 0>,
				    <&trch_mbox  20     0                    0 0>,
				    <&trch_mbox  21     0                    0 0>,
				    <&trch_mbox  22     0                    0 0>,
				    <&trch_mbox  23     0                    0 0>,
				    <&trch_mbox  24     0                    0 0>,
				    <&trch_mbox  25     0                    0 0>,
				    <&trch_mbox  26     0                    0 0>,
				    <&trch_mbox  27     0                    0 0>;
				    /* Reserved for ATF
				     * <&trch_mbox  28     0                    0 0>,
				     * <&trch_mbox  29     0                    0 0>;
				     */
				    /* Reserved for in-kernel SSW (see below)
				     * <&trch_mbox  30     0                    0 0>,
				     * <&trch_mbox  31     0                    0 0>;
				     */
			/* NOTE: destination is just an identifier, mboxes accessible from any core */
			/* names optional, if not given, dev files named 'mbox%u' by index */
			/*
			mbox-names = "mbox_trch_out",
				     "mbox_trch_in",
				     "mbox_rtps_out",
				     "mbox_rtps_in",
				     "mbox_own_trch_out",
				     "mbox_own_trch_in";
			*/
		};

		mailbox_client_rtps {
			compatible = "hpsc-mbox-userspace";
			mboxes =  /* ip block, instance index, owner, src, dest */
				    <&rtps_mbox   0     0                    0 0>,
				    <&rtps_mbox   1     0                    0 0>,
				    <&rtps_mbox   2     0                    0 0>,
				    <&rtps_mbox   3     0                    0 0>,
				    <&rtps_mbox   4     0                    0 0>,
				    <&rtps_mbox   5     0                    0 0>,
				    <&rtps_mbox   6     0                    0 0>,
				    <&rtps_mbox   7     0                    0 0>,
				    <&rtps_mbox   8     0                    0 0>,
				    <&rtps_mbox   9     0                    0 0>,
				    <&rtps_mbox  10     0                    0 0>,
				    <&rtps_mbox  11     0                    0 0>,
				    <&rtps_mbox  12     0                    0 0>,
				    <&rtps_mbox  13     0                    0 0>,
				    <&rtps_mbox  14     0                    0 0>,
				    <&rtps_mbox  15     0                    0 0>,
				    <&rtps_mbox  16     0                    0 0>,
				    <&rtps_mbox  17     0                    0 0>,
				    <&rtps_mbox  18     0                    0 0>,
				    <&rtps_mbox  19     0                    0 0>,
				    <&rtps_mbox  20     0                    0 0>,
				    <&rtps_mbox  21     0                    0 0>,
				    <&rtps_mbox  22     0                    0 0>,
				    <&rtps_mbox  23     0                    0 0>,
				    <&rtps_mbox  24     0                    0 0>,
				    <&rtps_mbox  25     0                    0 0>,
				    <&rtps_mbox  26     0                    0 0>,
				    <&rtps_mbox  27     0                    0 0>,
				    <&rtps_mbox  28     0                    0 0>,
				    <&rtps_mbox  29     0                    0 0>,
				    <&rtps_mbox  30     0                    0 0>,
				    <&rtps_mbox  31     0                    0 0>;
		};

		mailbox_kernel {
			compatible = "hpsc-mbox-kernel";
			mboxes =  /* ip block, instance index, owner, src, dest */
				    <&trch_mbox  30     0  MASTER_ID_HPPS_CPU0 MASTER_ID_TRCH_CPU>,
				    <&trch_mbox  31     0  MASTER_ID_TRCH_CPU  MASTER_ID_HPPS_CPU0>;
		};
#endif /* CONFIG_MAILBOXES */

#if CONFIG_WDTS
		hpps_wdt: wdt@0xfff70000 {
			compatible = "hpsc,hpsc-wdt";
			reg = <0x0 0xfff70000 0x0 0x80000>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_PPI PPI_IRQ__WDT GIC_LVL_HI>;
		};
#endif /* CONFIG_WDTS */

#if CONFIG_RTI_TIMERS
		hpps_rti_tmr: hpsc-rti-tmr@0xfeed0000 {
			compatible = "hpsc,hpsc-rti-timer";
			reg = <0x0 0xffed0000 0x0 0x80000>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_PPI PPI_IRQ__RTI_TIMER GIC_EDGE_RISE>;
			#timer-cells = <1>; /* cpu index */
		};

		interval-dev {
			compatible = "interval-dev";
			devname = "rti_timer";
			timers = <&hpps_rti_tmr 0>,
				 <&hpps_rti_tmr 1>,
				 <&hpps_rti_tmr 2>,
				 <&hpps_rti_tmr 3>,
				 <&hpps_rti_tmr 4>,
				 <&hpps_rti_tmr 5>,
				 <&hpps_rti_tmr 6>,
				 <&hpps_rti_tmr 7>;
		};
#endif /* CONFIG_RTI_TIMERS */

#if CONFIG_DMA
		hpps_dma: dma-controller@0xf92e0000 {
			#dma-cells = <1>;
			compatible = "arm,pl330", "arm,primecell"; /* primecell spec required */
			reg = <0x0 0xf92e0000 0x0 0x1000>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__HPPS_DMA_ABORT GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__HPPS_DMA_EV0   GIC_LVL_HI>;
#if CONFIG_SMMU
			iommus = <&smmu MASTER_ID_HPPS_DMA>;
#endif
			clocks = <&dma_clk>;
			clock-names = "apb_pclk"; /* required, because amba code looks for it by name */
		};

		srio0_dma: dma-controller@0xe5310000 {
			#dma-cells = <1>;
			compatible = "arm,pl330", "arm,primecell"; /* primecell spec required */
			reg = <0x0 0xe5310000 0x0 0x1000>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__SRIO0_DMA_ABORT GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__SRIO0_DMA_EV0   GIC_LVL_HI>;
#if CONFIG_SMMU
			iommus = <&smmu MASTER_ID_SRIO0_DMA>;
#endif
			clocks = <&dma_clk>;
			clock-names = "apb_pclk"; /* required, because amba code looks for it by name */
		};

		srio1_dma: dma-controller@0xe5330000 {
			#dma-cells = <1>;
			compatible = "arm,pl330", "arm,primecell"; /* primecell spec required */
			reg = <0x0 0xe5330000 0x0 0x1000>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__SRIO1_DMA_ABORT GIC_LVL_HI>,
				     <GIC_SPI HPPS_IRQ__SRIO1_DMA_EV0 GIC_LVL_HI>;
#if CONFIG_SMMU
			iommus = <&smmu MASTER_ID_SRIO1_DMA>;
#endif
			clocks = <&dma_clk>;
			clock-names = "apb_pclk"; /* required, because amba code looks for it by name */
		};
#endif /* CONFIG_DMA */

#if CONFIG_SMC
		smc_sram: smc@f92d0000 {
			compatible = "arm,pl353-smc-r2p1";
			reg = <0x0 0xf92d0000 0x0 0x1000>;
			status = "okay";

			clocks = <&clk100>, <&clk125>;
			clock-names = "aclk", "memclk";

			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI HPPS_IRQ__HPPS_SMC_SRAM GIC_LVL_HI>;

#if CONFIG_SMMU
			/* iommus = <&smmu MASTER_ID_SMC>; */ /* not connected to an MMU TBU */
#endif

			#address-cells = <2>;
			#size-cells = <2>;
			ranges ;

			sram@600000000 {
				compatible = "mmio-sram";
				reg = <0x6 0x00000000 0x1 0x00000000>;

				status = "okay";

				arm,sram-chip-nmbr = <4>;

				arm,sram-mw = <0x2>; /* 32-bit width */
				arm,sram-wr-sync = <1>;
				arm,sram-rd-sync = <1>;
				arm,sram-cre= <1>;
				arm,sram-adv = <1>;
				arm,sram-ext-addr-bits= <0xb>;
				arm,sram-cycle-t0 = <10>;
				arm,sram-cycle-t1 = <10>;
				arm,sram-cycle-t2 = <1>;
				arm,sram-cycle-t3 = <1>;
				arm,sram-cycle-t4 = <1>;
				arm,sram-cycle-t5 = <1>;
				arm,sram-cycle-t6 = <0>;
			};
			nand0@680000000 {
				compatible = "arm,pl353-nand-r2p1";
				reg = <0x6 0x80000000 0x0 0x1000000>;

				status = "okay";
			};
		};
#endif /* CONFIG_SMC */
	};

	uart_clk: uart_clk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <16000000>;
	};

#if CONFIG_SMC || CONFIG_ETH_SNPS
	clk100: clk100 {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};
#endif /* CONFIG_SMC || CONFIG_ETH_SNPS */

#if CONFIG_SMC || CONFIG_ETH_CDNS
	clk125: clk125 {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <125000000>;
	};
#endif /* CONFIG_SMC || CONFIG_ETH_CDNS */

#if CONFIG_DMA
	dma_clk: dma_clk {
		compatible = "fixed-clock";
		#clock-cells = <0x0>;
		clock-frequency = <533000000>;
	};
#endif /* CONFIG_DMA */
};
